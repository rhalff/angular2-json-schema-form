{"version":3,"file":"ngsf-json-schema-form.umd.js","sources":["ng://@ngsf/json-schema-form/lib/json-schema-form.component.ts","ng://@ngsf/json-schema-form/lib/json-schema-form.module.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n} from '@angular/core'\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms'\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser'\nimport * as _ from 'lodash'\nimport {\n  FrameworkLibraryService,\n  JsonSchemaFormService,\n  WidgetLibraryService,\n} from '@ngsf/widget-library'\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isEmpty,\n  isObject,\n  forEach,\n  hasOwn,\n  JsonPointer,\n  resolveSchemaReferences,\n  convertSchemaToDraft6,\n} from '@ngsf/common'\n\nexport const JSON_SCHEMA_FORM_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line no-use-before-declare\n  useExisting: forwardRef(() => JsonSchemaFormComponent),\n  multi: true,\n}\n\n/**\n * Angular JSON Schema Form\n *\n * Root module of the Angular JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library also validates input data by the user, using both validators on\n * individual controls to provide real-time feedback while the user is filling\n * out the form, and then validating the entire input against the schema when\n * the form is submitted to make sure the returned JSON data object is valid.\n *\n * This library is similar to, and mostly API compatible with:\n *\n * - JSON Schema Form's Angular Schema Form library for AngularJs\n *   http://schemaform.io\n *   http://schemaform.io/examples/bootstrap-example.html (examples)\n *\n * - Mozilla's react-jsonschema-form library for React\n *   https://github.com/mozilla-services/react-jsonschema-form\n *   https://mozilla-services.github.io/react-jsonschema-form (examples)\n *\n * - Joshfire's JSON Form library for jQuery\n *   https://github.com/joshfire/jsonform\n *   http://ulion.github.io/jsonform/playground (examples)\n *\n * This library depends on:\n *  - Angular (obviously)                  https://angular.io\n *  - lodash, JavaScript utility library   https://github.com/lodash/lodash\n *  - ajv, Another JSON Schema validator   https://github.com/epoberezkin/ajv\n *\n * In addition, the Example Playground also depends on:\n *  - brace, Browserified Ace editor       http://thlorenz.github.io/brace\n */\n@Component({\n  selector: 'json-schema-form',\n  template: `\n    <div *ngFor=\"let stylesheet of stylesheets\">\n      <link rel=\"stylesheet\" [href]=\"stylesheet\" />\n    </div>\n    <div *ngFor=\"let script of scripts\">\n      <script type=\"text/javascript\" [src]=\"script\"></script>\n    </div>\n    <form class=\"json-schema-form\" (ngSubmit)=\"submitForm()\">\n      <root-widget [layout]=\"jsf?.layout\"></root-widget>\n    </form>\n    <div *ngIf=\"debug || jsf?.formOptions?.debug\">\n      Debug output:\n      <pre>{{ debugOutput }}</pre>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // Adding 'JsonSchemaFormService' here, instead of in the module,\n  // creates a separate instance of the service for each component\n  providers: [JsonSchemaFormService, JSON_SCHEMA_FORM_VALUE_ACCESSOR],\n})\nexport class JsonSchemaFormComponent\n  implements ControlValueAccessor, OnChanges, OnInit {\n  debugOutput: any // Debug information, if requested\n  formValueSubscription: any = null\n  formInitialized = false\n  objectWrap = false // Is non-object input schema wrapped in an object?\n\n  formValuesInput: string // Name of the input providing the form data\n  previousInputs: {\n    // Previous input values, to detect which input triggers onChanges\n    schema: any\n    layout: any[]\n    data: any\n    options: any\n    framework: any | string\n    widgets: any\n    form: any\n    model: any\n    JSONSchema: any\n    UISchema: any\n    formData: any\n    loadExternalAssets: boolean\n    debug: boolean\n  } = {\n    schema: null,\n    layout: null,\n    data: null,\n    options: null,\n    framework: null,\n    widgets: null,\n    form: null,\n    model: null,\n    JSONSchema: null,\n    UISchema: null,\n    formData: null,\n    loadExternalAssets: null,\n    debug: null,\n  }\n\n  // Recommended inputs\n  @Input() schema: any // The JSON Schema\n  @Input() layout: any[] // The form layout\n  @Input() data: any // The form data\n  @Input() options: any // The global form options\n  @Input() framework: any | string // The framework to load\n  @Input() widgets: any // Any custom widgets to load\n\n  // Alternate combined single input\n  @Input() form: any // For testing, and JSON Schema Form API compatibility\n\n  // Angular Schema Form API compatibility input\n  @Input() model: any // Alternate input for form data\n\n  // React JSON Schema Form API compatibility inputs\n  @Input() JSONSchema: any // Alternate input for JSON Schema\n  @Input() UISchema: any // UI schema - alternate form layout format\n  @Input() formData: any // Alternate input for form data\n\n  @Input() ngModel: any // Alternate input for Angular forms\n\n  @Input() language: string // Language\n\n  // Development inputs, for testing and debugging\n  @Input() loadExternalAssets: boolean // Load external framework assets?\n  @Input() debug: boolean // Show debug information?\n  // tslint:disable no-output-on-prefix\n  @Output() onChanges = new EventEmitter<any>() // Live unvalidated internal form data\n  @Output() onSubmit = new EventEmitter<any>() // Complete validated form data\n\n  // Outputs\n  // tslint:enable no-output-on-prefix\n  @Output() isValid = new EventEmitter<boolean>() // Is current data valid?\n  @Output() validationErrors = new EventEmitter<any>() // Validation errors (if any)\n  @Output() formSchema = new EventEmitter<any>() // Final schema used to create form\n  @Output() formLayout = new EventEmitter<any>() // Final layout used to create form\n  // There is no 2-way binding if inital data is combined inside the 'form' input.\n  @Output() dataChange = new EventEmitter<any>()\n  @Output() modelChange = new EventEmitter<any>()\n\n  // Outputs for possible 2-way data binding\n  // Only the one input providing the initial form data will be bound.\n  // If there is no inital data, input '{}' to activate 2-way data binding.\n  @Output() formDataChange = new EventEmitter<any>()\n  @Output() ngModelChange = new EventEmitter<any>()\n  onChange: (formValues: any) => void\n  onTouched: (formValues: any) => void\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private frameworkLibrary: FrameworkLibraryService,\n    private widgetLibrary: WidgetLibraryService,\n    public jsf: JsonSchemaFormService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  @Input()\n  get value(): any {\n    return this.objectWrap ? this.jsf.data['1'] : this.jsf.data\n  }\n\n  set value(value: any) {\n    this.setFormValues(value, false)\n  }\n\n  get stylesheets(): SafeResourceUrl[] {\n    const stylesheets = this.frameworkLibrary.getFrameworkStylesheets()\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl\n    return stylesheets.map(stylesheet => load(stylesheet))\n  }\n\n  get scripts(): SafeResourceUrl[] {\n    const scripts = this.frameworkLibrary.getFrameworkScripts()\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl\n    return scripts.map(script => load(script))\n  }\n\n  ngOnInit() {\n    this.updateForm()\n  }\n\n  ngOnChanges() {\n    this.updateForm()\n  }\n\n  writeValue(value: any) {\n    this.setFormValues(value, false)\n    if (!this.formValuesInput) {\n      this.formValuesInput = 'ngModel'\n    }\n  }\n\n  registerOnChange(fn: (formValues: any) => void) {\n    this.onChange = fn\n  }\n\n  registerOnTouched(fn: (formValues: any) => void) {\n    this.onTouched = fn\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.jsf.formOptions.formDisabled !== !!isDisabled) {\n      this.jsf.formOptions.formDisabled = !!isDisabled\n      this.initializeForm()\n    }\n  }\n\n  updateForm() {\n    if (\n      !this.formInitialized ||\n      !this.formValuesInput ||\n      (this.language && this.language !== this.jsf.language)\n    ) {\n      this.initializeForm()\n    } else {\n      if (this.language && this.language !== this.jsf.language) {\n        this.jsf.setLanguage(this.language)\n      }\n\n      // Get names of changed inputs\n      let changedInput = Object.keys(this.previousInputs).filter(\n        input => this.previousInputs[input] !== this[input]\n      )\n      let resetFirst = true\n      if (\n        changedInput.length === 1 &&\n        changedInput[0] === 'form' &&\n        this.formValuesInput.startsWith('form.')\n      ) {\n        // If only 'form' input changed, get names of changed keys\n        changedInput = Object.keys(this.previousInputs.form || {})\n          .filter(\n            key => !_.isEqual(this.previousInputs.form[key], this.form[key])\n          )\n          .map(key => `form.${key}`)\n        resetFirst = false\n      }\n\n      // If only input values have changed, update the form values\n      if (\n        changedInput.length === 1 &&\n        changedInput[0] === this.formValuesInput\n      ) {\n        if (this.formValuesInput.indexOf('.') === -1) {\n          this.setFormValues(this[this.formValuesInput], resetFirst)\n        } else {\n          const [input, key] = this.formValuesInput.split('.')\n          this.setFormValues(this[input][key], resetFirst)\n        }\n\n        // If anything else has changed, re-render the entire form\n      } else if (changedInput.length) {\n        this.initializeForm()\n        if (this.onChange) {\n          this.onChange(this.jsf.formValues)\n        }\n        if (this.onTouched) {\n          this.onTouched(this.jsf.formValues)\n        }\n      }\n\n      // Update previous inputs\n      Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input])\n        .forEach(input => (this.previousInputs[input] = this[input]))\n    }\n  }\n\n  setFormValues(formValues: any, resetFirst = true) {\n    if (formValues) {\n      const newFormValues = this.objectWrap ? formValues['1'] : formValues\n      if (!this.jsf.formGroup) {\n        this.jsf.formValues = formValues\n        this.activateForm()\n      } else if (resetFirst) {\n        this.jsf.formGroup.reset()\n      }\n      if (this.jsf.formGroup) {\n        this.jsf.formGroup.patchValue(newFormValues)\n      }\n      if (this.onChange) {\n        this.onChange(newFormValues)\n      }\n      if (this.onTouched) {\n        this.onTouched(newFormValues)\n      }\n    } else {\n      this.jsf.formGroup.reset()\n    }\n  }\n\n  submitForm() {\n    const validData = this.jsf.validData\n    this.onSubmit.emit(this.objectWrap ? validData['1'] : validData)\n  }\n\n  /**\n   * 'initializeForm' function\n   *\n   * - Update 'schema', 'layout', and 'formValues', from inputs.\n   *\n   * - Create 'schemaRefLibrary' and 'schemaRecursiveRefMap'\n   *   to resolve schema $ref links, including recursive $ref links.\n   *\n   * - Create 'dataRecursiveRefMap' to resolve recursive links in data\n   *   and corectly set output formats for recursively nested values.\n   *\n   * - Create 'layoutRefLibrary' and 'templateRefLibrary' to store\n   *   new layout nodes and formGroup elements to use when dynamically\n   *   adding form components to arrays and recursive $ref points.\n   *\n   * - Create 'dataMap' to map the data to the schema and template.\n   *\n   * - Create the master 'formGroupTemplate' then from it 'formGroup'\n   *   the Angular formGroup used to control the reactive form.\n   */\n  initializeForm() {\n    if (\n      this.schema ||\n      this.layout ||\n      this.data ||\n      this.form ||\n      this.model ||\n      this.JSONSchema ||\n      this.UISchema ||\n      this.formData ||\n      this.ngModel ||\n      this.jsf.data\n    ) {\n      this.jsf.resetAllValues() // Reset all form values to defaults\n      this.initializeOptions() // Update options\n      this.initializeSchema() // Update schema, schemaRefLibrary,\n      // schemaRecursiveRefMap, & dataRecursiveRefMap\n      this.initializeLayout() // Update layout, layoutRefLibrary,\n      this.initializeData() // Update formValues\n      this.activateForm() // Update dataMap, templateRefLibrary,\n      // formGroupTemplate, formGroup\n\n      if (this.debug || this.jsf.formOptions.debug) {\n        const vars: any[] = []\n        this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n')\n      }\n      this.formInitialized = true\n    }\n  }\n\n  /**\n   * 'initializeOptions' function\n   *\n   * Initialize 'options' (global form options) and set framework\n   * Combine available inputs:\n   * 1. options - recommended\n   * 2. form.options - Single input style\n   */\n  private initializeOptions() {\n    if (this.language && this.language !== this.jsf.language) {\n      this.jsf.setLanguage(this.language)\n    }\n    this.jsf.setOptions({debug: !!this.debug})\n    let loadExternalAssets: boolean = this.loadExternalAssets || false\n    let framework: any = this.framework || 'default'\n    if (isObject(this.options)) {\n      this.jsf.setOptions(this.options)\n      loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets\n      framework = this.options.framework || framework\n    }\n    if (isObject(this.form) && isObject(this.form.options)) {\n      this.jsf.setOptions(this.form.options)\n      loadExternalAssets =\n        this.form.options.loadExternalAssets || loadExternalAssets\n      framework = this.form.options.framework || framework\n    }\n    if (isObject(this.widgets)) {\n      this.jsf.setOptions({widgets: this.widgets})\n    }\n    this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets)\n    this.frameworkLibrary.setFramework(framework)\n    this.jsf.framework = this.frameworkLibrary.getFramework()\n    if (isObject(this.jsf.formOptions.widgets)) {\n      for (const widget of Object.keys(this.jsf.formOptions.widgets)) {\n        this.widgetLibrary.registerWidget(\n          widget,\n          this.jsf.formOptions.widgets[widget]\n        )\n      }\n    }\n    if (isObject(this.form) && isObject(this.form.tpldata)) {\n      this.jsf.setTpldata(this.form.tpldata)\n    }\n  }\n\n  /**\n   * 'initializeSchema' function\n   *\n   * Initialize 'schema'\n   * Use first available input:\n   * 1. schema - recommended / Angular Schema Form style\n   * 2. form.schema - Single input / JSON Form style\n   * 3. JSONSchema - React JSON Schema Form style\n   * 4. form.JSONSchema - For testing single input React JSON Schema Forms\n   * 5. form - For testing single schema-only inputs\n   *\n   * ... if no schema input found, the 'activateForm' function, below,\n   *     will make two additional attempts to build a schema\n   * 6. If layout input - build schema from layout\n   * 7. If data input - build schema from data\n   */\n  private initializeSchema() {\n    // TODO: update to allow non-object schemas\n\n    if (isObject(this.schema)) {\n      this.jsf.AngularSchemaFormCompatibility = true\n      this.jsf.schema = _.cloneDeep(this.schema)\n    } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\n      this.jsf.schema = _.cloneDeep(this.form.schema)\n    } else if (isObject(this.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true\n      this.jsf.schema = _.cloneDeep(this.JSONSchema)\n    } else if (\n      hasOwn(this.form, 'JSONSchema') &&\n      isObject(this.form.JSONSchema)\n    ) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true\n      this.jsf.schema = _.cloneDeep(this.form.JSONSchema)\n    } else if (\n      hasOwn(this.form, 'properties') &&\n      isObject(this.form.properties)\n    ) {\n      this.jsf.schema = _.cloneDeep(this.form)\n    } else if (isObject(this.form)) {\n      // TODO: Handle other types of form input\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n      // If other types also allowed, render schema as an object\n      if (inArray('object', this.jsf.schema.type)) {\n        this.jsf.schema.type = 'object'\n      }\n\n      // Wrap non-object schemas in object.\n      if (\n        hasOwn(this.jsf.schema, 'type') &&\n        this.jsf.schema.type !== 'object'\n      ) {\n        this.jsf.schema = {\n          type: 'object',\n          properties: {1: this.jsf.schema},\n        }\n        this.objectWrap = true\n      } else if (!hasOwn(this.jsf.schema, 'type')) {\n        // Add type = 'object' if missing\n        if (\n          isObject(this.jsf.schema.properties) ||\n          isObject(this.jsf.schema.patternProperties) ||\n          isObject(this.jsf.schema.additionalProperties)\n        ) {\n          this.jsf.schema.type = 'object'\n\n          // Fix JSON schema shorthand (JSON Form style)\n        } else {\n          this.jsf.JsonFormCompatibility = true\n          this.jsf.schema = {\n            type: 'object',\n            properties: this.jsf.schema,\n          }\n        }\n      }\n\n      // If needed, update JSON Schema to draft 6 format, including\n      // draft 3 (JSON Form style) and draft 4 (Angular Schema Form style)\n      this.jsf.schema = convertSchemaToDraft6(this.jsf.schema)\n\n      // Initialize ajv and compile schema\n      this.jsf.compileAjvSchema()\n\n      // Create schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n      this.jsf.schema = resolveSchemaReferences(\n        this.jsf.schema,\n        this.jsf.schemaRefLibrary,\n        this.jsf.schemaRecursiveRefMap,\n        this.jsf.dataRecursiveRefMap,\n        this.jsf.arrayMap\n      )\n      if (hasOwn(this.jsf.schemaRefLibrary, '')) {\n        this.jsf.hasRootReference = true\n      }\n\n      // TODO: (?) Resolve external $ref links\n      // // Create schemaRefLibrary & schemaRecursiveRefMap\n      // this.parser.bundle(this.schema)\n      //   .then(schema => this.schema = resolveSchemaReferences(\n      //     schema, this.jsf.schemaRefLibrary,\n      //     this.jsf.schemaRecursiveRefMap, this.jsf.dataRecursiveRefMap\n      //   ));\n    }\n  }\n\n  /**\n   * 'initializeData' function\n   *\n   * Initialize 'formValues'\n   * defulat or previously submitted values used to populate form\n   * Use first available input:\n   * 1. data - recommended\n   * 2. model - Angular Schema Form style\n   * 3. form.value - JSON Form style\n   * 4. form.data - Single input style\n   * 5. formData - React JSON Schema Form style\n   * 6. form.formData - For easier testing of React JSON Schema Forms\n   * 7. (none) no data - initialize data from schema and layout defaults only\n   */\n  private initializeData() {\n    if (hasValue(this.data)) {\n      this.jsf.formValues = _.cloneDeep(this.data)\n      this.formValuesInput = 'data'\n    } else if (hasValue(this.model)) {\n      this.jsf.AngularSchemaFormCompatibility = true\n      this.jsf.formValues = _.cloneDeep(this.model)\n      this.formValuesInput = 'model'\n    } else if (hasValue(this.ngModel)) {\n      this.jsf.AngularSchemaFormCompatibility = true\n      this.jsf.formValues = _.cloneDeep(this.ngModel)\n      this.formValuesInput = 'ngModel'\n    } else if (isObject(this.form) && hasValue(this.form.value)) {\n      this.jsf.JsonFormCompatibility = true\n      this.jsf.formValues = _.cloneDeep(this.form.value)\n      this.formValuesInput = 'form.value'\n    } else if (isObject(this.form) && hasValue(this.form.data)) {\n      this.jsf.formValues = _.cloneDeep(this.form.data)\n      this.formValuesInput = 'form.data'\n    } else if (hasValue(this.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true\n      this.formValuesInput = 'formData'\n    } else if (hasOwn(this.form, 'formData') && hasValue(this.form.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true\n      this.jsf.formValues = _.cloneDeep(this.form.formData)\n      this.formValuesInput = 'form.formData'\n    } else {\n      this.formValuesInput = null\n    }\n  }\n\n  /**\n   * 'initializeLayout' function\n   *\n   * Initialize 'layout'\n   * Use first available array input:\n   * 1. layout - recommended\n   * 2. form - Angular Schema Form style\n   * 3. form.form - JSON Form style\n   * 4. form.layout - Single input style\n   * 5. (none) no layout - set default layout instead\n   *    (full layout will be built later from the schema)\n   *\n   * Also, if alternate layout formats are available,\n   * import from 'UISchema' or 'customFormItems'\n   * used for React JSON Schema Form and JSON Form API compatibility\n   * Use first available input:\n   * 1. UISchema - React JSON Schema Form style\n   * 2. form.UISchema - For testing single input React JSON Schema Forms\n   * 2. form.customFormItems - JSON Form style\n   * 3. (none) no input - don't import\n   */\n  private initializeLayout() {\n    // Rename JSON Form-style 'options' lists to\n    // Angular Schema Form-style 'titleMap' lists.\n    const fixJsonFormOptions = (layout: any): any => {\n      if (isObject(layout) || isArray(layout)) {\n        forEach(\n          layout,\n          (value, key) => {\n            if (hasOwn(value, 'options') && isObject(value.options)) {\n              value.titleMap = value.options\n              delete value.options\n            }\n          },\n          'top-down'\n        )\n      }\n      return layout\n    }\n\n    // Check for layout inputs and, if found, initialize form layout\n    if (isArray(this.layout)) {\n      this.jsf.layout = _.cloneDeep(this.layout)\n    } else if (isArray(this.form)) {\n      this.jsf.AngularSchemaFormCompatibility = true\n      this.jsf.layout = _.cloneDeep(this.form)\n    } else if (this.form && isArray(this.form.form)) {\n      this.jsf.JsonFormCompatibility = true\n      this.jsf.layout = fixJsonFormOptions(_.cloneDeep(this.form.form))\n    } else if (this.form && isArray(this.form.layout)) {\n      this.jsf.layout = _.cloneDeep(this.form.layout)\n    } else {\n      this.jsf.layout = ['*']\n    }\n\n    // Check for alternate layout inputs\n    let alternateLayout: any = null\n    if (isObject(this.UISchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true\n      alternateLayout = _.cloneDeep(this.UISchema)\n    } else if (hasOwn(this.form, 'UISchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true\n      alternateLayout = _.cloneDeep(this.form.UISchema)\n    } else if (hasOwn(this.form, 'uiSchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true\n      alternateLayout = _.cloneDeep(this.form.uiSchema)\n    } else if (hasOwn(this.form, 'customFormItems')) {\n      this.jsf.JsonFormCompatibility = true\n      alternateLayout = fixJsonFormOptions(\n        _.cloneDeep(this.form.customFormItems)\n      )\n    }\n\n    // if alternate layout found, copy alternate layout options into schema\n    if (alternateLayout) {\n      JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\n        const schemaPointer = pointer\n          .replace(/\\//g, '/properties/')\n          .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\n          .replace(\n            /\\/properties\\/titleMap\\/properties\\//g,\n            '/titleMap/properties/'\n          )\n        if (hasValue(value) && hasValue(pointer)) {\n          let key = JsonPointer.toKey(pointer)\n          const groupPointer = (JsonPointer.parse(schemaPointer) || []).slice(\n            0,\n            -2\n          )\n          let itemPointer: string | string[]\n\n          // If 'ui:order' object found, copy into object schema root\n          if (key.toLowerCase() === 'ui:order') {\n            itemPointer = [...groupPointer, 'ui:order']\n\n            // Copy other alternate layout options to schema 'x-schema-form',\n            // (like Angular Schema Form options) and remove any 'ui:' prefixes\n          } else {\n            if (key.slice(0, 3).toLowerCase() === 'ui:') {\n              key = key.slice(3)\n            }\n            itemPointer = [...groupPointer, 'x-schema-form', key]\n          }\n          if (\n            JsonPointer.has(this.jsf.schema, groupPointer) &&\n            !JsonPointer.has(this.jsf.schema, itemPointer)\n          ) {\n            JsonPointer.set(this.jsf.schema, itemPointer, value)\n          }\n        }\n      })\n    }\n  }\n\n  /**\n   * 'activateForm' function\n   *\n   * ...continued from 'initializeSchema' function, above\n   * If 'schema' has not been initialized (i.e. no schema input found)\n   * 6. If layout input - build schema from layout input\n   * 7. If data input - build schema from data input\n   *\n   * Create final layout,\n   * build the FormGroup template and the Angular FormGroup,\n   * subscribe to changes,\n   * and activate the form.\n   */\n  private activateForm() {\n    // If 'schema' not initialized\n    if (isEmpty(this.jsf.schema)) {\n      // TODO: If full layout input (with no '*'), build schema from layout\n      // if (!this.jsf.layout.includes('*')) {\n      //   this.jsf.buildSchemaFromLayout();\n      // } else\n\n      // If data input, build schema from data\n      if (!isEmpty(this.jsf.formValues)) {\n        this.jsf.buildSchemaFromData()\n      }\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n      // If not already initialized, initialize ajv and compile schema\n      this.jsf.compileAjvSchema()\n\n      // Update all layout elements, add values, widgets, and validators,\n      // replace any '*' with a layout built from all schema elements,\n      // and update the FormGroup template with any new validators\n      this.jsf.buildLayout(this.widgetLibrary)\n\n      // Build the Angular FormGroup template from the schema\n      this.jsf.buildFormGroupTemplate(this.jsf.formValues)\n\n      // Build the real Angular FormGroup from the FormGroup template\n      this.jsf.buildFormGroup()\n    }\n\n    if (this.jsf.formGroup) {\n      // Reset initial form values\n      if (\n        !isEmpty(this.jsf.formValues) &&\n        this.jsf.formOptions.setSchemaDefaults !== true &&\n        this.jsf.formOptions.setLayoutDefaults !== true\n      ) {\n        this.setFormValues(this.jsf.formValues)\n      }\n\n      // TODO: Figure out how to display calculated values without changing object data\n      // See http://ulion.github.io/jsonform/playground/?example=templating-values\n      // Calculate references to other fields\n      // if (!isEmpty(this.jsf.formGroup.value)) {\n      //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\n      //     if (typeof value === 'string') {\n      //       object[key] = this.jsf.parseText(value, value, rootObject, key);\n      //     }\n      //   }, 'top-down');\n      // }\n\n      // Subscribe to form changes to output live data, validation, and errors\n      this.jsf.dataChanges.subscribe(data => {\n        this.onChanges.emit(this.objectWrap ? data['1'] : data)\n        if (this.formValuesInput && this.formValuesInput.indexOf('.') === -1) {\n          this[`${this.formValuesInput}Change`].emit(\n            this.objectWrap ? data['1'] : data\n          )\n        }\n      })\n\n      // Trigger change detection on statusChanges to show updated errors\n      this.jsf.formGroup.statusChanges.subscribe(() =>\n        this.changeDetector.markForCheck()\n      )\n      this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid))\n      this.jsf.validationErrorChanges.subscribe(err =>\n        this.validationErrors.emit(err)\n      )\n\n      // Output final schema, final layout, and initial data\n      this.formSchema.emit(this.jsf.schema)\n      this.formLayout.emit(this.jsf.layout)\n      this.onChanges.emit(this.objectWrap ? this.jsf.data['1'] : this.jsf.data)\n\n      // If validateOnRender, output initial validation and any errors\n      const validateOnRender = JsonPointer.get(\n        this.jsf,\n        '/formOptions/validateOnRender'\n      )\n      if (validateOnRender) {\n        // validateOnRender === 'auto' || true\n        const touchAll = control => {\n          if (validateOnRender === true || hasValue(control.value)) {\n            control.markAsTouched()\n          }\n          Object.keys(control.controls || {}).forEach(key =>\n            touchAll(control.controls[key])\n          )\n        }\n        touchAll(this.jsf.formGroup)\n        this.isValid.emit(this.jsf.isValid)\n        this.validationErrors.emit(this.jsf.ajvErrors)\n      }\n    }\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport {\n  JsonSchemaFormService,\n  FrameworkLibraryService,\n  WidgetLibraryService,\n  WidgetLibraryModule,\n} from '@ngsf/widget-library'\nimport {Framework} from '@ngsf/common'\nimport {JsonSchemaFormComponent} from './json-schema-form.component'\nimport {NoFramework} from '@ngsf/no-framework'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    WidgetLibraryModule,\n  ],\n  declarations: [JsonSchemaFormComponent],\n  exports: [JsonSchemaFormComponent, WidgetLibraryModule],\n})\nexport class JsonSchemaFormModule {\n  static forRoot(...frameworks): ModuleWithProviders<JsonSchemaFormModule> {\n    const loadFrameworks = frameworks.length\n      ? frameworks.map(framework => framework.forRoot().providers[0])\n      : [{provide: Framework, useClass: NoFramework, multi: true}]\n    return {\n      ngModule: JsonSchemaFormModule,\n      providers: [\n        JsonSchemaFormService,\n        FrameworkLibraryService,\n        WidgetLibraryService,\n        ...loadFrameworks,\n      ],\n    }\n  }\n}\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","_.isEqual","isObject","_.cloneDeep","hasOwn","isEmpty","inArray","convertSchemaToDraft6","resolveSchemaReferences","hasValue","isArray","forEach","JsonPointer","ChangeDetectorRef","FrameworkLibraryService","WidgetLibraryService","JsonSchemaFormService","DomSanitizer","Input","Output","Component","ChangeDetectionStrategy","Framework","NoFramework","NgModule","CommonModule","FormsModule","ReactiveFormsModule","WidgetLibraryModule"],"mappings":"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"}