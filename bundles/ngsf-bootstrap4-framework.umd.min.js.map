{"version":3,"sources":["ng://@ngsf/bootstrap4-framework/lib/bootstrap4-framework.component.ts","ng://@ngsf/bootstrap4-framework/lib/bootstrap4-framework.ts","ng://@ngsf/bootstrap4-framework/lib/bootstrap4-framework.module.ts"],"names":["Bootstrap4FrameworkComponent","changeDetector","jsf","this","frameworkInitialized","formControl","debugOutput","debug","parentArray","isOrderable","Object","defineProperty","prototype","options","removable","readonly","layoutNode","type","recursiveReference","arrayItem","items","length","minItems","arrayItemType","layoutIndex","ngOnInit","initializeFramework","getParentNode","orderable","ngOnChanges","_this","_.cloneDeep","widgetLayoutNode","__assign","widgetOptions","getFormControl","isInputWidget","inArray","title","setTitle","htmlClass","addClasses","labelHtmlClass","activeClass","fieldAddonLeft","prepend","fieldAddonRight","append","notitle","required","includes","itemLabelHtmlClass","style","fieldHtmlClass","messageLocation","icon","updateHelpBlock","status","statusChanges","subscribe","_.map","thisVar","JSON","stringify","join","helpBlock","enableErrorState","errors","dirty","feedbackOnRender","formatErrors","validationMessages","description","help","expandable","setItemTitle","removeItem","ChangeDetectorRef","JsonSchemaFormService","__decorate","Input","Component","selector","template","Bootstrap4Framework","_super","apply","arguments","name","framework","stylesheets","scripts","__extends","__decorate$1","Injectable","Framework","Bootstrap4FrameworkModule","forRoot","ngModule","Bootstrap4FrameworkModule_1","providers","provide","useClass","multi","__decorate$2","NgModule","imports","CommonModule","WidgetLibraryModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["import {ChangeDetectorRef, Component, Input, OnChanges, OnInit} from '@angular/core'\nimport * as _ from 'lodash'\nimport {addClasses, inArray} from '@ngsf/common'\nimport {JsonSchemaFormService} from '@ngsf/widget-library'\n\n/**\n * Bootstrap 4 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  selector: 'bootstrap-4-framework',\n  template: `\n      <div\n              [class]=\"options?.htmlClass || ''\"\n              [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n              [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n              [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n          <button *ngIf=\"showRemoveButton\"\n                  class=\"close pull-right\"\n                  type=\"button\"\n                  (click)=\"removeItem()\">\n              <span aria-hidden=\"true\">&times;</span>\n              <span class=\"sr-only\">Close</span>\n          </button>\n          <div *ngIf=\"options?.messageLocation === 'top'\">\n              <p *ngIf=\"options?.helpBlock\"\n                 class=\"help-block\"\n                 [innerHTML]=\"options?.helpBlock\"></p>\n          </div>\n\n          <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n                 [attr.for]=\"'control' + layoutNode?._id\"\n                 [class]=\"options?.labelHtmlClass || ''\"\n                 [class.sr-only]=\"options?.notitle\"\n                 [innerHTML]=\"options?.title\"></label>\n          <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n              <strong class=\"text-danger\">*</strong> = required fields\n          </p>\n          <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n              class=\"input-group-addon\"\n              [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n              <select-widget-widget\n                      [layoutNode]=\"widgetLayoutNode\"\n                      [dataIndex]=\"dataIndex\"\n                      [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n              <span *ngIf=\"options?.fieldAddonRight\"\n                    class=\"input-group-addon\"\n                    [innerHTML]=\"options?.fieldAddonRight\"></span>\n          </div>\n\n          <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n                [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n                [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n                aria-hidden=\"true\"\n                class=\"form-control-feedback glyphicon\"></span>\n          <div *ngIf=\"options?.messageLocation !== 'top'\">\n              <p *ngIf=\"options?.helpBlock\"\n                 class=\"help-block\"\n                 [innerHTML]=\"options?.helpBlock\"></p>\n          </div>\n      </div>\n\n      <div *ngIf=\"debug && debugOutput\">debug:\n          <pre>{{debugOutput}}</pre>\n      </div>\n  `,\n  styles: [`\n      :host /deep/ .list-group-item .form-control-feedback {\n          top: 40px;\n      }\n\n      :host /deep/ .checkbox,\n      :host /deep/ .radio {\n          margin-top: 0;\n          margin-bottom: 0;\n      }\n\n      :host /deep/ .checkbox-inline,\n      :host /deep/ .checkbox-inline + .checkbox-inline,\n      :host /deep/ .checkbox-inline + .radio-inline,\n      :host /deep/ .radio-inline,\n      :host /deep/ .radio-inline + .radio-inline,\n      :host /deep/ .radio-inline + .checkbox-inline {\n          margin-left: 0;\n          margin-right: 10px;\n      }\n\n      :host /deep/ .checkbox-inline:last-child,\n      :host /deep/ .radio-inline:last-child {\n          margin-right: 0;\n      }\n\n      :host /deep/ .ng-invalid.ng-touched {\n          border: 1px solid #f44336;\n      }\n  `],\n})\nexport class Bootstrap4FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false\n  widgetOptions: any // Options passed to child widget\n  widgetLayoutNode: any // layoutNode passed to child widget\n  options: any // Options used in this framework\n  formControl: any = null\n  debugOutput: any = ''\n  debug: any = ''\n  parentArray: any = null\n  isOrderable = false\n  @Input() layoutNode: any\n  @Input() layoutIndex: number[]\n  @Input() dataIndex: number[]\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) {\n  }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) {\n      return false\n    }\n    if (this.layoutNode.recursiveReference) {\n      return true\n    }\n    if (!this.layoutNode.arrayItem || !this.parentArray) {\n      return false\n    }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n        // For removable tuple items, only allow removing last item in list\n        this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2\n  }\n\n  ngOnInit() {\n    this.initializeFramework()\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this)\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) {\n      this.initializeFramework()\n    }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options)\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      }\n      this.widgetOptions = this.widgetLayoutNode.options\n      this.formControl = this.jsf.getFormControl(this)\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ])\n\n      this.options.title = this.setTitle()\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type)\n      this.options.htmlClass =\n        this.layoutNode.type === 'array' ?\n          addClasses(this.options.htmlClass, 'list-group') :\n          this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n            addClasses(this.options.htmlClass, 'list-group-item') :\n            addClasses(this.options.htmlClass, 'form-group')\n      this.widgetOptions.htmlClass = ''\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label')\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active')\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>'\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox':\n        case 'checkboxes':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox')\n          break\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox')\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline')\n          break\n        // Radio controls\n        case 'radio':\n        case 'radios':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio')\n          break\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio')\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline')\n          break\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons':\n        case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group')\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn')\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default')\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only')\n          break\n        // Single button controls\n        case 'button':\n        case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn')\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info')\n          break\n        // Containers - arrays and fieldsets\n        case 'array':\n        case 'fieldset':\n        case 'section':\n        case 'conditional':\n        case 'advancedfieldset':\n        case 'authfieldset':\n        case 'selectfieldset':\n        case 'optionfieldset':\n          this.options.messageLocation = 'top'\n          break\n        case 'tabarray':\n        case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content')\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane')\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs')\n          break\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right')\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default')\n          this.options.icon = 'glyphicon glyphicon-plus'\n          break\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control')\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status)\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status))\n\n        if (this.options.debug) {\n          const vars: any[] = []\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n')\n        }\n      }\n      this.frameworkInitialized = true\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n    this.options.enableErrorState && this.formControl.errors &&\n    (this.formControl.dirty || this.options.feedbackOnRender) ?\n      this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n      this.options.description || this.options.help || null\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button':\n      case 'checkbox':\n      case 'section':\n      case 'help':\n      case 'msg':\n      case 'submit':\n      case 'message':\n      case 'tabarray':\n      case 'tabs':\n      case '$ref':\n        return null\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true\n        this.widgetOptions.title = 'Advanced options'\n        return null\n      case 'authfieldset':\n        this.widgetOptions.expandable = true\n        this.widgetOptions.title = 'Authentication settings'\n        return null\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title\n        return null\n      default:\n        this.widgetOptions.title = null\n        return this.jsf.setItemTitle(this)\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this)\n  }\n}\n","import {Injectable} from '@angular/core'\nimport {Framework} from '@ngsf/common'\n// Bootstrap 4 Framework\n// https://github.com/ng-bootstrap/ng-bootstrap\nimport {Bootstrap4FrameworkComponent} from './bootstrap4-framework.component'\n\n@Injectable()\nexport class Bootstrap4Framework extends Framework {\n  name = 'bootstrap-4'\n\n  framework = Bootstrap4FrameworkComponent\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css'\n  ]\n\n  scripts = [\n    '//code.jquery.com/jquery-3.2.1.slim.min.js',\n    '//cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js',\n  ]\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {WidgetLibraryModule} from '@ngsf/widget-library'\nimport {Framework} from '@ngsf/common'\nimport {Bootstrap4FrameworkComponent} from './bootstrap4-framework.component'\nimport {Bootstrap4Framework} from './bootstrap4-framework'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    WidgetLibraryModule\n  ],\n  declarations: [Bootstrap4FrameworkComponent],\n  exports: [Bootstrap4FrameworkComponent],\n  entryComponents: [Bootstrap4FrameworkComponent]\n})\nexport class Bootstrap4FrameworkModule {\n  static forRoot(): ModuleWithProviders<Bootstrap4FrameworkModule> {\n    return {\n      ngModule: Bootstrap4FrameworkModule,\n      providers: [\n        {\n          provide: Framework,\n          useClass: Bootstrap4Framework,\n          multi: true\n        }\n      ]\n    }\n  }\n}\n"]}