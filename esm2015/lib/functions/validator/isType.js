import { isString } from './isString';
import { isDate } from './isDate';
import { isNumber } from './isNumber';
import { isInteger } from './isInteger';
import { isBoolean } from './isBoolean';
import { hasValue } from './hasValue';
export function isType(value, type) {
    switch (type) {
        case 'string':
            return isString(value) || isDate(value);
        case 'number':
            return isNumber(value);
        case 'integer':
            return isInteger(value);
        case 'boolean':
            return isBoolean(value);
        case 'null':
            return !hasValue(value);
        default:
            console.error(`isType error: "${type}" is not a recognized type.`);
            return null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNUeXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5nc2YvY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2Z1bmN0aW9ucy92YWxpZGF0b3IvaXNUeXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxZQUFZLENBQUE7QUFDbkMsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFVBQVUsQ0FBQTtBQUMvQixPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sWUFBWSxDQUFBO0FBQ25DLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxhQUFhLENBQUE7QUFDckMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGFBQWEsQ0FBQTtBQUNyQyxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sWUFBWSxDQUFBO0FBWW5DLE1BQU0sVUFBVSxNQUFNLENBQUMsS0FBcUIsRUFBRSxJQUF5QjtJQUNyRSxRQUFRLElBQUksRUFBRTtRQUNaLEtBQUssUUFBUTtZQUNYLE9BQU8sUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN6QyxLQUFLLFFBQVE7WUFDWCxPQUFPLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN4QixLQUFLLFNBQVM7WUFDWixPQUFPLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN6QixLQUFLLFNBQVM7WUFDWixPQUFPLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN6QixLQUFLLE1BQU07WUFDVCxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ3pCO1lBQ0UsT0FBTyxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsSUFBSSw2QkFBNkIsQ0FBQyxDQUFBO1lBQ2xFLE9BQU8sSUFBSSxDQUFBO0tBQ2Q7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtpc1N0cmluZ30gZnJvbSAnLi9pc1N0cmluZydcbmltcG9ydCB7aXNEYXRlfSBmcm9tICcuL2lzRGF0ZSdcbmltcG9ydCB7aXNOdW1iZXJ9IGZyb20gJy4vaXNOdW1iZXInXG5pbXBvcnQge2lzSW50ZWdlcn0gZnJvbSAnLi9pc0ludGVnZXInXG5pbXBvcnQge2lzQm9vbGVhbn0gZnJvbSAnLi9pc0Jvb2xlYW4nXG5pbXBvcnQge2hhc1ZhbHVlfSBmcm9tICcuL2hhc1ZhbHVlJ1xuaW1wb3J0IHtQcmltaXRpdmVWYWx1ZSwgU2NoZW1hUHJpbWl0aXZlVHlwZX0gZnJvbSAnLi90eXBlcydcblxuLyoqXG4gKiAnaXNUeXBlJyBmdW5jdGlvblxuICpcbiAqIENoZWNrcyB3aGV0aGVyIGFuIGlucHV0IChwcm9iYWJseSBzdHJpbmcpIHZhbHVlIGNvbnRhaW5zIGRhdGEgb2ZcbiAqIGEgc3BlY2lmaWVkIEpTT04gU2NoZW1hIHR5cGVcbiAqXG4gKiBAcGFyYW0gdmFsdWUgLSB2YWx1ZSB0byBjaGVja1xuICogQHBhcmFtIHR5cGUgLSB0eXBlIHRvIGNoZWNrXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1R5cGUodmFsdWU6IFByaW1pdGl2ZVZhbHVlLCB0eXBlOiBTY2hlbWFQcmltaXRpdmVUeXBlKTogYm9vbGVhbiB7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICByZXR1cm4gaXNTdHJpbmcodmFsdWUpIHx8IGlzRGF0ZSh2YWx1ZSlcbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgcmV0dXJuIGlzTnVtYmVyKHZhbHVlKVxuICAgIGNhc2UgJ2ludGVnZXInOlxuICAgICAgcmV0dXJuIGlzSW50ZWdlcih2YWx1ZSlcbiAgICBjYXNlICdib29sZWFuJzpcbiAgICAgIHJldHVybiBpc0Jvb2xlYW4odmFsdWUpXG4gICAgY2FzZSAnbnVsbCc6XG4gICAgICByZXR1cm4gIWhhc1ZhbHVlKHZhbHVlKVxuICAgIGRlZmF1bHQ6XG4gICAgICBjb25zb2xlLmVycm9yKGBpc1R5cGUgZXJyb3I6IFwiJHt0eXBlfVwiIGlzIG5vdCBhIHJlY29nbml6ZWQgdHlwZS5gKVxuICAgICAgcmV0dXJuIG51bGxcbiAgfVxufVxuIl19